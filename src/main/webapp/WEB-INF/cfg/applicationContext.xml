<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

        <!-- 文件视图配置器 velocity -->
        <bean id="velocityViewResolver"	class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
                <property name="viewClass" value="org.springframework.web.servlet.view.velocity.VelocityView" />
                <property name="exposeSessionAttributes" value="true"/>
                <property name="allowSessionOverride" value="true"/>
                <property name="prefix" value="/WEB-INF/page/"></property>
                <property name="suffix" value=".html"></property>
                <property name="cache" value="true"></property>
                <property name="contentType" value="text/html;charset=UTF-8" />
        </bean>

        <bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
                <property name="resourceLoaderPath">
                        <value>/</value>
                </property>
                <property name="velocityProperties">
                        <props>
                                <prop key="input.encoding">UTF-8</prop>
                                <prop key="output.encoding">UTF-8</prop>
                        </props>
                </property>
        </bean>

        <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
        <bean id="multipartResolver"
              class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
                <!-- 默认编码 -->
                <property name="defaultEncoding" value="utf-8" />
                <!-- 文件大小最大值 -->
                <property name="maxUploadSize" value="10485760000" />
                <!-- 内存中的最大值 -->
                <property name="maxInMemorySize" value="40960" />
        </bean>

        <!-- 获取配置文件 -->
        <bean id="config"  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
                <property name="locations">
                        <list>
                                <value>WEB-INF/cfg/jdbc.properties</value>
                        </list>
                </property>
        </bean>


        <!--配置数据源 -->
        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
              destroy-method="close">
                <property name="driverClassName" >
                        <value>${jdbc.driver}</value>
                </property>
                <property name="url">
                        <value>${jdbc.url}</value>
                </property>
                <property name="username">
                        <value>${jdbc.username}</value>
                 </property>
                <property name="password">
                        <value>${jdbc.password}</value>
                </property>
                <!-- 连接池启动时的初始值 -->
                <property name="initialSize">
                        <value>${jdbc.initialSize}</value>
                 </property>
                <!-- 连接池的最大值 -->
                <property name="maxActive">
                        <value>${jdbc.maxActive}</value>
                </property>
                <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
                <property name="maxIdle">
                        <value>${jdbc.maxIdle}</value>
                </property>
                <!--  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
                <property name="minIdle">
                        <value>${jdbc.minIdle}</value>
                </property>
        </bean>
        <!--
            采用注解方式来配置事务。针对数据源的事务管理器
            ，把我们定义的数据源注入到DataSourceTransactionManager类的属性dataSource中
        -->
        <bean id="txManager"
              class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
                <property name="dataSource" ref="dataSource" />
        </bean>
        <!-- 向dao中注入database以便获取jdbctemplate -->
        <!--<bean id="userDao" class="com.excelib.dao.UserDao">-->
                <!--<property name="dataSource" ref="dataSource" />-->
        <!--</bean>-->
        <!-- 向jdbcTemplate中动态注入database无需指定dao -->
        <bean id="jdbcTemplate"
              class="org.springframework.jdbc.core.JdbcTemplate">
                <property name="dataSource" ref="dataSource" />
        </bean>
        <!--引入命名空间： 1.xmlns:tx="http://www.springframework.org/schema/tx
            2.http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
            采用@Transaction注解方式使用事务管理器
        -->
        <tx:annotation-driven transaction-manager="txManager" />

        <mvc:annotation-driven/>
        <context:component-scan base-package="com.excelib" />
</beans>